<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <title>Skills App</title>
  <style>
    .text-center {
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }

    #linkers {
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
      font-size: x-large;
      color: rgba(140, 2, 140, 0.66);
    }
    .searcher-container {
      float: right;
      padding: 6px;
      margin-top: 8px;
      margin-right: 16px;
      background: lightblue;
      font-size: 17px;
      border: none;
      cursor: pointer;
    }
    .search-button {
      font-size: 10px;
      background-color: #d8bfd8;
      border: solid black;
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }
    .search-button:hover {
      color: whitesmoke;
    }
  #search-input {
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  }
    .navbar {
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
      background-color: lightblue;
      overflow: hidden;
    }
    .navbar a {
      float: left;
      font-size: 20px;
      color: black;
      text-align: center;
      padding: 14px 16px;
      text-decoration: none;
    }
    .nav-link:hover {
      color: whitesmoke;
    }

    .btntheme {
      margin-top: 8px;
      margin-right: 16px;
      background-color: #d8bfd8;
      border: solid black;
      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
      text-align: center;
      display: inline-block;
      font-size: 10px;
      cursor: pointer;
    }
    .btntheme:hover {
      color: whitesmoke;
    }
    .app:hover {
            cursor: pointer;
        }

  </style>
</head>
<body style="background-image: url('images/bg2.jpg');">
  <nav class="navbar navbar-expand-sm">
    <div class="container-fluid">
      <a class="navbar-brand" href="/"><img src="/images/app.png" width="50"></a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsibleNavbar">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="collapsibleNavbar">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/userqns">Got a question?</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="searcher-container">
    <input type="text" id="search-input" placeholder="Search..">
    <button onclick="searchSite()" class="search-button">Search</button>
    <button id="btnChangeTheme" class="btntheme">Theme</button>
  </div>

  

  <div id="no-results" style="display: none; text-align: center; margin-top: 20px;">
    <p>No results found</p>
  </div>
  
  <div class="container mt-3">
    <div class="form-group">
      <label for="entries-per-page">Entries per page:</label>
      <select id="entries-per-page" class="form-control" style="width: auto;" onchange="changeEntriesPerPage()">
        <option value="5">5</option>
        <option value="10" selected>10</option>
        <option value="15">15</option>
        <option value="20">20</option>
      </select>
    </div>
  </div>

  <div class="container mt-3">
    <br>
    <div class="text-center">
      <h2>Frequently Asked Questions</h2>
    </div>
    <br><br>

    <table class="table table-hover small text-center" id="users-table">
      <thead>
        <tr>
            <th width="100">Questions</th>
            <th width="100">Answers</th>
        </tr>
      </thead>
      <tbody>
        <% for(let i=0; i < faqs.length; i++) { %>
          <tr data-searchable="true">
            <td><%= faqs[i].questions %></td>
            <td><%= faqs[i].ans %></td>
          </tr>
        <% } %>
      </tbody>
    </table>

    <nav>
      <ul class="pagination justify-content-center">
        <li class="page-item"><a class="page-link" href="#" onclick="previousPage()"><img src="/images/prev.png" width="24"></a></li>
        <li class="page-item"><a class="page-link" href="#" onclick="nextPage()"><img src="/images/fwd.png" width="24"></a></li>
      </ul>
    </nav>
  </div>

  <script>
    let entriesPerPage = 10;
    let currentPage = 1;
    let filteredRows = []; 

    function paginateTable(page) {
      const rows = filteredRows.length ? filteredRows : document.querySelectorAll('#users-table tbody tr');
      const totalRows = rows.length;
      const totalPages = Math.ceil(totalRows / entriesPerPage);

      if (page < 1) page = 1;
      if (page > totalPages) page = totalPages;

      currentPage = page;

      rows.forEach((row, index) => {
        if (index >= (page - 1) * entriesPerPage && index < page * entriesPerPage) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function previousPage() {
      if (currentPage > 1) {
        currentPage--;
        paginateTable(currentPage);
      }
    }

    function nextPage() {
      const rows = filteredRows.length ? filteredRows : document.querySelectorAll('#users-table tbody tr');
      const totalRows = rows.length;
      const totalPages = Math.ceil(totalRows / entriesPerPage);
      if (currentPage < totalPages) {
        currentPage++;
        paginateTable(currentPage);
      }
    }

    function searchSite() {
      const input = document.getElementById('search-input').value.toLowerCase();
      const rows = document.querySelectorAll('#users-table tbody tr');
      let found = false;
      filteredRows = [];

      rows.forEach((row) => {
        const text = row.textContent.toLowerCase();
        if (text.includes(input)) {
          row.style.display = '';
          filteredRows.push(row);
          found = true;
        } else {
          row.style.display = 'none';
        }
      });

      document.getElementById('no-results').style.display = found ? 'none' : 'block';
      paginateTable(1); 
    }

    function changeEntriesPerPage() {
      entriesPerPage = parseInt(document.getElementById('entries-per-page').value);
      paginateTable(1);
    }

    document.addEventListener('DOMContentLoaded', () => paginateTable(currentPage));

    document.getElementById("btnChangeTheme").addEventListener('click', () => {
    document.body.style.backgroundColor = document.body.style.backgroundColor === 'lightgrey' ? 'white' : 'lightgrey';

});
  </script>
</body>
</html>
